/* HomePage Styles */

@use "../../assets/theme" as *;

@font-face {
  font-family: "Mona Sans";
  src: url("https://assets.codepen.io/64/Mona-Sans.woff2")
      format("woff2 supports variations"),
    url("https://assets.codepen.io/64/Mona-Sans.woff2")
      format("woff2-variations");
  font-weight: 100 1000;
}

@layer properties {
    @property --max-height {
        syntax:'<number>';
        inherits: true;
        initial-value: 0;
    }
    @property --bg-x {
        syntax:'<number>';
        inherits: true;
        initial-value: 50;
    }
    @property --bg-y {
        syntax:'<number>';
        inherits: true;
        initial-value: -200;
    }
    @property --scale {
        syntax:'<number>';
        inherits: true;
        initial-value: 1;
    }
    @property --accent-color-hue {
        syntax:'<number>';
        inherits: true;
        initial-value: 0;
    }
    @property --accent-color-hue {
        syntax:'<number>';
        inherits: true;
        initial-value: 0;
    }
    @property --item-y {
        syntax:'<number>';
        inherits: true;
        initial-value: 0;
    }
    @property --item-opacity {
        syntax:'<number>';
        inherits: true;
        initial-value: 0;
    }
    @property --accent-color {
        syntax:'<color>';
        inherits: true;
        initial-value: hsl(calc(var(--accent-color-hue)*1deg) 100% 58%);
    }
    @property --radial-bg-color {
        syntax:'<color>';
        inherits: true;
        initial-value: black;
    }
}


*,*:before,*:after {
  outline: calc(var(--debug)*1px) dotted red;
  outline-offset: -1px;
}

main#homepage-container {
    /* Set variables using CSS so that they can be set dynamically using JavaScript */
    --background-color: hsl(222deg 17% 14%);
    --dark-color: hsl(227deg 37% 3%);
    --light-color: hsl(211deg 23% 51%);
    --accent-color-hue: 219;
    --accent-color: hsl(calc(var(--accent-color-hue)*1deg) 100% 58%);
    --radial-bg-color: var(--dark-color);
    --max-height: 0;
    --container-width: 300;
    --bg-y: -50;
    --bg-x: var(--container-width);
    --item-y: 20;
    --item-opacity: 0;

    /* Misc */
    --_inner-radius: 10;
    --_inner-padding: 6;
    --inner-radius: calc(var(--_inner-radius) * 1px);
    --inner-padding: calc(var(--_inner-padding) * 1px);
    --outer-radius: calc(calc(var(--_inner-radius) + var(--_inner-padding)) * 1px);
    --debug: 0;
    --a11y: 0;
    --outline-color: hsla(calc(var(--accent-color-hue)*1deg) 100% 58% / calc(var(--a11y)*100%));
    min-height: 80vh;
    max-width: 800px;
    padding: 0 16px;
    margin: 0 auto;
    font-family: "Mona sans", sans-serif;
    & > div {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    header {
        color: white;
        & h3 {
            letter-spacing: .15em;
        }
    }
    div.selection-container {
        position: relative;
        z-index: 1;
        width: calc(var(--container-width)*1px);
        padding: var(--inner-padding);
        background: 
            var(--dark-color)
            radial-gradient(
                ellipse 70% 70%
                at calc(var(--bg-x)*1%) calc(var(--bg-y)*1%),
                var(--radial-bg-color) 0%,
                var(--dark-color) 100%
            );
        border-radius: var(--outer-radius);
        color: $theme_white;
        transition: background .3s ease, --bg-y .4 ease, --bg-x .4s ease;
        &:hover{
            animation: glow 1.2s ease-in-out;
        }
        //:focus-within or :has(button:focus)
        &:focus-within {
            outline: 1px dashed var(--outline-color);
        }
        &:hover > .options-container,
        &:has(button:focus) > .options-container,
        &:focus-within > .options-container {
            // Manually set height of div for now
            height: calc(var(--max-height)*1px);
            --item-y: 0;
            --item-opacity: 1;
        }
        &:before {
            position: absolute;
            z-index: -1;
            content: '';
            width: calc(100% - 2px);
            height: calc(100% - 2px);
            top: 1px;
            left: 1px;
            background: var(--dark-color);
            border-radius: var(--outer-radius);
        }
        button.current-selection {
            position: relative;
            width: 100%;
            padding: var(--inner-padding);
            padding-left: 16px;
            background: var(--background-color);
            border-radius: var(--inner-radius);
            border: 0;
            color: $theme_white;
            text-align: left;
            text-transform: capitalize;
            cursor: pointer;
            box-shadow: inset 0 2px 1px -1px rgb(255 255 255 / 10%);
            transform: scale(var(--scale));
            animation-duration: .2s;
            animation-timing-function: cubic-bezier(.66,-0.82,.33,1.73);
            &:focus {
                outline: 1px solid var(--accent-color);
                outline-offset: -1px;
            }
            // Button icon
            &:after {
                content: '';
                position: absolute;
                height: 100%;
                width: 1em;
                inset: 0 8px auto auto;
                background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='58' height='98' fill='none'%3E%3Cpath fill='hsl(211deg 23% 51%)' d='M25.536 6c1.54-2.667 5.388-2.667 6.928 0l18.187 31.5c1.54 2.667-.385 6-3.465 6H10.814c-3.079 0-5.003-3.333-3.464-6L25.536 6ZM25.536 92c1.54 2.667 5.388 2.667 6.928 0l18.187-31.5c1.54-2.667-.385-6-3.465-6H10.814c-3.079 0-5.003 3.333-3.464 6L25.536 92Z'/%3E%3C/svg%3E") no-repeat center center / 0.6em;
            }
        }
        div.options-container {
            height: 0;
            display: flex;
            flex-direction: column;
            overflow: hidden;
            transition: --max-height .2s ease;
            transition: height .3s ease-in-out;
            .option-item {
                position: relative;
                margin-top: 16px;
                padding: calc(var(--inner-padding)*1.6) calc(var(--inner-padding)*1.2);
                cursor: pointer;
                border-radius: var(--inner-radius);
                color: var(--light-color);
                color: white;
                text-decoration: none;
                text-transform: capitalize;
                span {
                    position: relative;
                    display: block;
                    transform: translateY(calc(var(--item-y)*1px));
                    //opacity: var(--item-opacity);
                    transition: --item-y .2s ease .1s, --item-opacity .2s .1s;
                }
                &:nth-child(1) span {
                    transition-delay: .1s;
                }
                &:nth-child(2) span {
                    transition-delay: .15s;
                }
                &:nth-child(3) span {
                    transition-delay: .2s;
                }
                &:focus {
                    outline: 1px solid var(--outline-color);
                    outline-offset: -1px;
                }
                &:hover,
                &:focus{
                    color: var(--accent-color);
                }
            }
        }
    }
}

.select.nomotion {
    transition: none !important;
    animation: none !important;
    &:before,
    &:after,
    *, *:before, *:after {
        transition: none !important;
        animation: none !important;
    }
}
@media (prefers-reduced-motion: reduce) {
    .select {
        transition: none !important;
        animation: none !important;
        &:before,
        &:after,
        *, *:before, *:after {
            transition: none !important;
            animation: none !important;
        }
    }
}

@keyframes glow {
  from {
    --radial-bg-color: var(--accent-color);
    --bg-x: 100;
    --bg-y: 0;
  }
  50% {
    --radial-bg-color: rgb(0, 175, 175);
    --bg-x: 60;
    --bg-y: 120;
  }
  to {
    --radial-bg-color: var(--dark-color);
    --bg-x: 60;
    --bg-y: 120;
  }
}

@keyframes popOut {
  from {
    --scale: 1;
  }
  50% {
    --scale: 1.02;
  }
  to {
    --scale: 1;
  }
}
